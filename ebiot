#!/usr/bin/env perl
use 5.010;
use strict;

use AnyEvent::IRC::Client ();
use AnyEvent::IRC::Util qw( encode_ctcp );
use AnyEvent::HTTP qw( http_get );
use URI ();
use URI::QueryParam ();
use JSON::XS qw( decode_json );

die "usage: $0 <server> <port> <channel> <nick>\n"
	if 4 != @ARGV;

my ( $server, $port, $channel, $nick ) = @ARGV;

my $uri = URI->new( 'http://www.urbandictionary.com/iphone/search/define' );

$AnyEvent::HTTP::USERAGENT = 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)';

my $pc = AnyEvent::IRC::Client->new;

$pc->reg_cb(
	publicmsg => sub {
		my ( $self, $channel, $msg ) = @_;

		my $send = sub { $pc->send_long_message( 'UTF-8', 0, PRIVMSG => $channel, encode_ctcp @_ ) };

		my $_ = $msg->{'params'}->[-1];

		if ( m/^!urban\s+(.*)/ ) {
			$uri->query_param( term => $1 );
			warn "Fetching $uri\n";

			http_get $uri, sub {
				my ( $body, $hdr ) = @_;

				if ( 200 ne $hdr->{'Status'} ) {
					$send->( [ ACTION => q(can't open the dictionary) ] );
					return;
				}

				my $found  = decode_json $body;
				my $result = ( $found->{'list'} // [] )->[0] // {};
				my $definition = $result->{'definition'};

				given ( $found->{'result_type'} ) {
					when ( 'exact' ) {}

					when ( 'full_text' ) {
						$send->( [ ACTION => "found that in the definition for '$result->{'word'}'" ] );
					}

					default {
						$send->( [ ACTION => q(can't find that in the dictionary) ] );
						return;
					}
				}

				$definition =~ s/\s+/ /g;
				$send->( $definition );
			};
		}
		elsif ( m!\b(https?://\S+)!i ) {
			my $uri = $1;
			warn "Fetching $uri\n";

			my $title;
			my $body = '';
			http_get $uri, (
				on_header => sub {
					my $hdr = shift;
					return 1 if $hdr->{'Status'} =~ /^3/;
					return 0 if 200 ne $hdr->{'Status'};
					$hdr->{'content-type'} =~ m!\Atext/html\s*(?:;|\z)!;
				},
				on_body => sub {
					return 1 if 200 ne $_[1]{'Status'};
					$body .= shift;
					return 1 unless $body =~ m!<title>([^<]*)<!i;
					$title = $1;
					return;
				},
				sub {
					$title //= ( $body =~ m!<title>([^<]*)<!i )[0];
					return if not defined $title;
					$title =~ s/\s+/ /g;
					$send->( "[ $title ]" );
				},
			);
		}
	}
);

my $c = AnyEvent->condvar;

my $w;
$pc->reg_cb(
	registered => sub { $w = AnyEvent->signal( signal => 'INT', cb => sub { $pc->disconnect } ) },
	disconnect => sub { $c->broadcast },
);

$pc->send_srv( JOIN => $channel );

$pc->connect( $server, $port, {
	nick => $nick,
	user => $nick,
	real => 'some dumb little bot',
} );

$c->wait;
